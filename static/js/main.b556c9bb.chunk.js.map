{"version":3,"sources":["Reducers/Reducer.js","Constants/Constant.js","rootReducer.js","Actions/Action.js","Components/Home.js","Tab.js","Root.js","App.js","store.js","registerServiceWorker.js","index.js"],"names":["initialState","tabStatus","rootReducer","combineReducers","Reducer","state","action","type","Object","assign","menuChange","Home","props","openMenu","onCloseClick","bind","openMenuClick","this","setState","Pushable","as","Segment","Menu","animation","direction","icon","inverted","vertical","visible","width","Item","href","onClick","name","Pusher","className","id","color","tag","size","textAlign","horizontal","Content","Header","Description","src","frameborder","allowfullscreen","aria-hidden","tabindex","React","Component","connect","mapStateToProps","mapDispatchToProps","Tab","nextProps","nextState","propsDiff","_","isEqual","stateDiff","Root","window","innerWidth","dispatch","bindActionCreators","Action","store","compose","applyMiddleware","Thunk","createStore","finalCreateStore","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b556c9bb.chunk.js","sourcesContent":["import * as Constant from '../Constants/Constant';\r\n\r\nconst initialState = {\r\n    tabStatus: Constant.STAT_HOME,\r\n        \r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case Constant.ACT_MENUCHANGE:\r\n            return Object.assign({}, state, {\r\n                tabStatus: action.tabStatus,\r\n            });\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","// tabStatus\r\nexport const STAT_HOME = 'STAT_REGISTRATION';\r\n\r\n// Action\r\nexport const ACT_MENUCHANGE = 'ACT_MENUCHANGE';\r\n","import { combineReducers } from 'redux';\r\nimport Reducer from './Reducers/Reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    Reducer,\r\n});\r\n\r\nexport default rootReducer;","import * as Constant from '../Constants/Constant';\r\n\r\nexport function menuChange(tabStatus) {\r\n    return {\r\n        type: Constant.ACT_MENUCHANGE,\r\n        tabStatus: tabStatus\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Menu, Icon, Sidebar, Segment, Label, Button, Card, Divider, Header, Container } from 'semantic-ui-react';\r\n\r\nimport { mapStateToProps, mapDispatchToProps } from '../Root.js';\r\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\r\n\r\nexport class Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            openMenu: false,\r\n        };\r\n\r\n        this.onCloseClick = this.onCloseClick.bind(this);\r\n        this.openMenuClick = this.openMenuClick.bind(this);\r\n    }\r\n\r\n    onCloseClick() {\r\n        this.setState({ openMenu: !this.state.openMenu });\r\n    }\r\n\r\n    openMenuClick() {\r\n        this.setState({ openMenu: !this.state.openMenu });\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Sidebar.Pushable as={Segment}>\r\n                <Sidebar\r\n                    as={Menu}\r\n                    animation='overlay'\r\n                    direction='top'\r\n                    icon='labeled'\r\n                    inverted\r\n                    vertical\r\n                    visible={this.state.openMenu}\r\n                    width='thin'\r\n                >\r\n                    <Menu.Item as='a' href='#home' onClick={this.onCloseClick}>\r\n                        <Icon name='home' />\r\n                        Home\r\n                    </Menu.Item>\r\n                    <Menu.Item as='a' href='#menu' onClick={this.onCloseClick}>\r\n                        <Icon name='bar' />\r\n                        Menu\r\n                    </Menu.Item>\r\n                    <Menu.Item as='a' href='#access' onClick={this.onCloseClick}>\r\n                        <Icon name='point' />\r\n                        Access\r\n                    </Menu.Item>\r\n                    <Menu.Item as='a' href='#sns' onClick={this.onCloseClick}>\r\n                        <Icon name='comment' />\r\n                        SNS\r\n                    </Menu.Item>\r\n                    <Menu.Item as='a' onClick={this.onCloseClick}>\r\n                        <Icon name='close' />\r\n                        Close\r\n                    </Menu.Item>\r\n                </Sidebar>\r\n\r\n                <Sidebar.Pusher>\r\n                    <div className='background' id='home'>\r\n                        <div className='mobile-margin'>\r\n                            <div className='menu-tag'>\r\n                                <Label as='a' color='brown' tag size='large' onClick={this.openMenuClick}>\r\n                                    <Icon name='list ul' />\r\n                                    Menu\r\n                                </Label>\r\n                            </div>\r\n                           <div className='header-title'>\r\n                                <Header className='header-one' textAlign='center'>Bar LAGOON</Header>\r\n                                <Header as='h3' textAlign='center'>女性が一人でも気兼ねなく飲める明るいBar</Header>\r\n                            </div>\r\n                            <div className='menu-menu'>\r\n                                <div id='menu'>\r\n                                    <Divider horizontal>\r\n                                        <Header as='h4'>\r\n                                            <Icon name='bar' />\r\n                                            Menu\r\n                                        </Header>\r\n                                    </Divider>\r\n                                    <Card className='card-wide'>\r\n                                        <Card.Content>\r\n                                        <Card.Header>Drink</Card.Header>\r\n                                        <Card.Description>\r\n                                            ジントニック　-　￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ジントニック　-　￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ジントニック　-　￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ジントニック　-　￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ジントニック　-　￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ジントニック　-　￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ジントニック　-　￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ジントニック　-　￥500\r\n                                        </Card.Description>\r\n                                        </Card.Content>\r\n                                    </Card>\r\n                                    <Card className='card-wide'>\r\n                                        <Card.Content>\r\n                                        <Card.Header>Food</Card.Header>\r\n                                        <Card.Description>\r\n                                            ミックスナッツ＆チョコ　- ￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ミックスナッツ＆チョコ　- ￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ミックスナッツ＆チョコ　- ￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ミックスナッツ＆チョコ　- ￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ミックスナッツ＆チョコ　- ￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ミックスナッツ＆チョコ　- ￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ミックスナッツ＆チョコ　- ￥500\r\n                                        </Card.Description>\r\n                                        <Card.Description>\r\n                                            ミックスナッツ＆チョコ　- ￥500\r\n                                        </Card.Description>\r\n                                        \r\n                                        </Card.Content>\r\n                                    </Card>\r\n                                </div>\r\n                                <div id='access'>\r\n                                    <Divider horizontal>\r\n                                        <Header as='h4'>\r\n                                            <Icon name='point' />\r\n                                            Access\r\n                                        </Header>\r\n                                    </Divider>\r\n                                    <Container textAlign='center' className='access-content'>\r\n                                        <Header as='h4'>〒 260-0006</Header>\r\n                                        <Header as='h4'>千葉県千葉市中央区道場北2-18-40</Header>\r\n                                        <Header as='h4'>TEL : 070-3898-4939</Header>\r\n                                    </Container>\r\n                                    <iframe className='google-map' src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3243.5345720693895!2d140.12907061561077!3d35.61454584123311!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x602284cdf0755977%3A0xab41ba743c65dae0!2z44CSMjYwLTAwMDYg5Y2D6JGJ55yM5Y2D6JGJ5biC5Lit5aSu5Yy66YGT5aC05YyX77yS5LiB55uu77yR77yY4oiS77yU77yQ!5e0!3m2!1sja!2sjp!4v1606536781581!5m2!1sja!2sjp\" frameborder=\"0\" allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\r\n                                </div>\r\n                                <div id='sns'>\r\n                                    <Divider horizontal>\r\n                                        <Header as='h4'>\r\n                                            <Icon name='comment' />\r\n                                            SNS\r\n                                        </Header>\r\n                                    </Divider>\r\n                                    <div className='sns-button'>\r\n                                        <Button color='facebook'>\r\n                                            <Icon name='facebook' /> Facebook\r\n                                        </Button>\r\n                                        <Button color='twitter'>\r\n                                            <Icon name='twitter' /> Twitter\r\n                                        </Button>\r\n                                        <Button color='instagram'>\r\n                                            <Icon name='instagram' /> Instagram\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>  \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Sidebar.Pusher>\r\n            </Sidebar.Pushable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Home);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { mapStateToProps, mapDispatchToProps } from './Root';\r\nimport * as Constant from './Constants/Constant';\r\nimport Home from './Components/Home';\r\n\r\n\r\nexport class Tab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const propsDiff = _.isEqual(nextProps, this.props);\r\n        const stateDiff = _.isEqual(nextState, this.state);\r\n        return !(propsDiff && stateDiff);\r\n    }\r\n\r\n    render() {\r\n        switch (this.props.Reducer.tabStatus) {\r\n            case Constant.STAT_HOME:\r\n                return (\r\n                    <div>\r\n                        <Home />\r\n                    </div>\r\n                );\r\n            default:\r\n                return (\r\n                    <div>\r\n                        No content...\r\n                    </div>\r\n                );\r\n        }\r\n    }\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Tab);\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './App.css';\r\nimport { Header, Segment, Icon, Menu, Modal, Button, Form, Image, Sidebar, Table } from 'semantic-ui-react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport * as Action from './Actions/Action';\r\nimport * as Constant from './Constants/Constant';\r\nimport Tab from './Tab';\r\n\r\n\r\nexport class Root extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const propsDiff = _.isEqual(nextProps, this.props);\r\n        const stateDiff = _.isEqual(nextState, this.state);\r\n        return !(propsDiff && stateDiff);\r\n    }\r\n\r\n    render() {\r\n        let wide = window.innerWidth;\r\n        if (wide < 960) {\r\n            return (\r\n                <Tab />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>No Content...</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n// state の中に store.js の combineReducers で指定したキーの State が全部入ってくる\r\nexport function mapStateToProps(state) {\r\n    return state;\r\n}\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n    return {\r\n        action: bindActionCreators(Action, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Root);","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport createFinalStore from './store';\n\nimport Root from './Root'\n\nconst store = createFinalStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Root />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport Thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nexport default function createFinalStore() {\r\n    const finalCreateStore = compose(applyMiddleware(Thunk))(createStore);\r\n    return finalCreateStore(rootReducer);\r\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'babel-polyfill';\r\nimport 'url-polyfill';\r\nimport \"isomorphic-fetch\";\r\nimport 'react-app-polyfill/ie11';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}